---
import BaseLayout from '@/layouts/Base';
import DateTime from '@/components/DateTime';
import '../styles/post.css';

const { title, description, publishDate, updatedDate, image } = Astro.props;
const postOgImage = `https://res.cloudinary.com/domr7evsg/image/upload/l_text:biz.woff2_50_bold_letter_spacing_5_line_spacing_20:${title},co_rgb:16131c,w_900,c_fit,g_north_west,x_147,y_200/v1678135119/ogp_jspwo7.jpg`;
const meta = {
  title: title,
  description: description,
  ogImage: postOgImage,
};
const postURL = new URL(Astro.url, Astro.site).href;
const shareURL = postURL.endsWith('/') ? postURL.slice(0, -1) : postURL;
---

<BaseLayout meta={meta}>
  <article>
    <h1>{title}</h1>
    {
      image && (
        <div class="thumbnail">
          <img src={image.src} alt={image.alt} width="" height="" decoding="async" />
        </div>
      )
    }
    <div class="date">
      <DateTime date={publishDate} type="publish" />
      {updatedDate && <DateTime date={updatedDate} type="updata" />}
    </div><!-- /.date -->
    <div class="post">
      <slot />
    </div><!-- /.post -->
  </article>
  <div class="share">
    <ul>
      <li>
        <a
          href={`http://twitter.com/share?url=${shareURL}&text=${title}%0a`}
          target="_blank"
          rel="nofollow"
        >
          Twitter
        </a>
      </li>
      <li>
        <a href={`http://www.facebook.com/share.php?u=${shareURL}`} rel="nofollow" target="_blank">
          facebook
        </a>
      </li>
      <li>
        <button id="copyBtn">„ÇØ„É™„ÉÉ„Éó„Éú„Éº„Éâ„Å´„Ç≥„Éî„Éº</button>
      </li>
    </ul>
  </div><!-- /.share -->
</BaseLayout>

<style>
  article {
    margin: var(--size-space-xl) auto 0;
    padding: 0 var(--size-space-xl);
    max-width: 800px;
  }

  @media (max-width: 959px) {
    article {
      padding: 0 3vw;
    }
  }

  h1 {
    font-weight: bold;
    font-size: 1.75rem;
  }

  .date {
    display: flex;
    justify-content: flex-end;
    gap: var(--size-space-md);
  }

  .share {
    margin: var(--size-space-md) auto 0;
    padding: var(--size-space-sm) var(--size-space-md);
    width: 80%;
  }

  .share ul {
    display: flex;
    gap: var(--size-space-md);
  }

  .share a {
  }

  button#copyBtn {
    position: relative;
  }

  button#copyBtn::after {
    display: inline-block;
    position: absolute;
    top: -65%;
    left: 50%;
    transform: translateX(-50%);
    background: hsla(
      var(--c-primary-h),
      var(--c-primary-s),
      var(--c-light80-l),
      var(--c-primary-a)
    );
    padding: 0.3em 0.5em;
    font-weight: bold;
    font-size: 0.75rem;
  }

  button#copyBtn.is_active::after {
    width: 120px;
    content: '„Ç≥„Éî„Éº„Åó„Åæ„Åó„Åüü•≥';
  }

  button#copyBtn.is_active_error::after {
    width: 150px;
    content: '„Ç≥„Éî„Éº„Åå„Åß„Åç„Åæ„Åõ„Çìü§ï';
  }
</style>

<script define:vars={{ shareURL }}>
  const copyBtn = document.getElementById('copyBtn');

  const copyToClipboard = (copyText, target) => {
    if (navigator.clipboard) {
      return navigator.clipboard.writeText(copyText).then(function () {
        messageActive(target);
      });
    } else {
      messageActiveError(target);
    }
  };
  const messageActive = target => {
    target.classList.add('is_active');
    setTimeout(() => {
      target.classList.remove('is_active');
    }, 1800);
  };

  const messageActiveError = target => {
    target.classList.add('is_active_error');
    setTimeout(() => {
      target.classList.remove('is_active_error');
    }, 1800);
  };

  copyBtn.addEventListener('click', () => {
    copyToClipboard(shareURL, copyBtn);
  });
</script>
